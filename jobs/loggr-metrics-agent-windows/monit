<%
  job_name = spec.job.name || name
  instance_id = spec.id || spec.index.to_s
  instance_zone = p("zone").empty? ? spec.az : p("zone")
  deployment = spec.deployment

  tags = {
      deployment: deployment,
      job: job_name,
      index: instance_id,
      ip: spec.ip,
  }
  tags.merge!(p("tags"))

  env = {
    "AGENT_PORT" => p("port"),
    "AGENT_CA_FILE_PATH" => "/var/vcap/jobs/loggr-metrics-agent/config/certs/grpc_ca.crt",
    "AGENT_CERT_FILE_PATH" => "/var/vcap/jobs/loggr-metrics-agent/config/certs/grpc.crt",
    "AGENT_KEY_FILE_PATH" => "/var/vcap/jobs/loggr-metrics-agent/config/certs/grpc.key",
    "AGENT_TAGS" => tags.map { |k, v| "#{k}:#{v}" }.join(","),
    "METRICS_PORT" => p("metrics_port"),
    "METRICS_CA_FILE_PATH" => "/var/vcap/jobs/loggr-metrics-agent/config/certs/metrics_ca.crt",
    "METRICS_CERT_FILE_PATH" => "/var/vcap/jobs/loggr-metrics-agent/config/certs/metrics.crt",
    "METRICS_KEY_FILE_PATH" => "/var/vcap/jobs/loggr-metrics-agent/config/certs/metrics.key",
  }

  monit = {
    "processes" => [
      {
        "name" => "metrics-agent",
        "executable" => "/var/vcap/packages/metrics-agent-windows/metrics-agent.exe",
        "args" => [],
        "env" => env
      }
    ]
  }
%>

<%= JSON.pretty_generate(monit) %>
